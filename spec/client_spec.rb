require "spec_helper"

describe "Roomorama API" do 
   
  describe "Client" do 
    let(:roomorama_client){ RoomoramaApi::Client.new }
    it "implement client" do 
      expect( roomorama_client ).to be_instance_of( RoomoramaApi::Client )
    end

    describe "#configuration" do  
      it "responds to configuration" do 
        expect( roomorama_client ).to respond_to(:configuration)
      end  
   
      it "returns Config object" do 
        expect( roomorama_client.configuration ).to be_instance_of( RoomoramaApi::Config )
      end
    end
    
    describe "#auth_token" do 
      it "respond to auth_token" do 
        expect( roomorama_client ).to respond_to(:auth_token)
      end
      
      it "return OAuth::Token class" do 
        expect( roomorama_client.auth_token ).to be_instance_of( OAuth2::AccessToken )
      end
    end

    describe "#create_room" do 
      it "responds to create_room" do 
        expect( roomorama_client ).to respond_to(:create_room)
      end


      it "recieve Status 200 for valid params" do 
        allow( roomorama_client ).to receive(:create_room).and_return( {status: 200}  )
        expect( roomorama_client.create_room[:status] ).to eql( 200 )
      end
    end

    it "responds to create_room_url autogenerated method" do 
      expect( roomorama_client ).to respond_to(:create_room_url)
    end

    it "builds create roomr url" do 
      expect( roomorama_client.send(:create_room_url) ).to eql("https://api.staging.roomorama.com/v1.0/host/rooms.json")
    end

    it "raises an exception when resource is not supported" do 
      expect{ roomorama_client.delete_room_url }.to raise_exception(RoomoramaApi::EndpointNotImplemented)
    end 

  end 

end
